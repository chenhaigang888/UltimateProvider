apply plugin: 'maven-publish'

def DEFAULT_POM_NAME='UltimateProvider'
def DEFAULT_POM_VERSION='1.0.0'  //har包版本信息
def DEFAULT_POM_ARTIFACT_ID="ultimateprovider"  //har包ID
def DEFAULT_POM_GROUP_ID='com.chg.ultimateprovider'  //项目组ID
def DEFAULT_POM_PACKAGING='har'  //包类型，固定为har
def DEFAULT_POM_DESCRIPTION='不需要使用Provider就可以快速使用ListContainer'
def MAVEN_USERNAME='chen'   //远程Maven仓的用户名
def MAVEN_PASSWORD='fe95a9df8dff13570f2cd3febc0d44bf63a03761'  //远程Maven仓的密码
def LOCAL_MAVEN_REPOSITORY_URL='D:/01.localMaven/'  //本地Maven仓地址
def REMOTE_MAVEN_REPOSITORY_URL='https://bintray.com/chenhaigang888/maven/UltimateProvider'  //远程Maven仓地址

afterEvaluate { project ->
    DEFAULT_POM_ARTIFACT_ID = project.name
    publishing {
        publications {
            maven(MavenPublication) {
                from components.release  //指定发布的har包类型为debug或release
                group = DEFAULT_POM_GROUP_ID
                artifactId = DEFAULT_POM_ARTIFACT_ID
                version = DEFAULT_POM_VERSION
                pom {
                    name = DEFAULT_POM_NAME
                    description = DEFAULT_POM_DESCRIPTION
                    packaging = DEFAULT_POM_PACKAGING
                }
            }
        }
        repositories {
            maven {
                url = LOCAL_MAVEN_REPOSITORY_URL  //发布到本地Maven仓
                //发布到远程Maven仓的地址以及Maven仓的帐号和密码
                /*url = REMOTE_MAVEN_REPOSITORY_URL
                 credentials {
                    username MAVEN_USERNAME
                    password MAVEN_PASSWORD
               }*/
            }
        }
    }
}
